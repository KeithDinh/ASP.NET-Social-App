{"version":3,"sources":["./src/app/_forms/date-input/date-input.component.ts","./src/app/_forms/date-input/date-input.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/members/member-messages/member-messages.component.ts","./src/app/members/member-messages/member-messages.component.html","./src/app/admin/photo-management/photo-management.component.ts","./src/app/admin/photo-management/photo-management.component.html","./src/app/_services/account.service.ts","./src/app/_errors/not-found/not-found.component.ts","./src/app/_errors/not-found/not-found.component.html","./src/app/_directives/has-role.directive.ts","./src/app/_services/busy.service.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/_models/pagination.ts","./src/environments/environment.ts","./src/app/_interceptors/jwt.interceptor.ts","./src/app/messages/messages.component.ts","./src/app/messages/messages.component.html","./src/app/member-card/member-card.component.ts","./src/app/member-card/member-card.component.html","./src/app/_modules/shared.module.ts","./src/app/_interceptors/error.interceptor.ts","./src/app/_guards/admin.guard.ts","./src/app/_services/admin.service.ts","./src/app/admin/user-management/user-management.component.ts","./src/app/admin/user-management/user-management.component.html","./src/app/members/member-detail/member-detail.component.ts","./src/app/members/member-detail/member-detail.component.html","./src/app/_guards/auth.guard.ts","./src/app/_services/message.service.ts","./src/app/members/member-list/member-list.component.ts","./src/app/members/member-list/member-list.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/_interceptors/loading.interceptor.ts","./src/app/_services/members.service.ts","./src/app/app.module.ts","./src/app/members/photo-editor/photo-editor.component.ts","./src/app/members/photo-editor/photo-editor.component.html","./src/app/_resolvers/member-detailed.resolver.ts","./src/app/_errors/test-errors/test-errors.component.ts","./src/app/_errors/test-errors/test-errors.component.html","./src/app/_forms/text-input/text-input.component.ts","./src/app/_forms/text-input/text-input.component.html","./src/app/lists/lists.component.ts","./src/app/lists/lists.component.html","./src/app/_errors/server-error/server-error.component.ts","./src/app/_errors/server-error/server-error.component.html","./src/app/nav/nav.component.ts","./src/app/nav/nav.component.html","./src/app/_services/presence.service.ts","./src/app/_models/userParams.ts","./src/app/admin/admin-panel/admin-panel.component.ts","./src/app/admin/admin-panel/admin-panel.component.html","./src/app/members/member-edit/member-edit.component.ts","./src/app/members/member-edit/member-edit.component.html","./src/app/_services/paginationHelper.ts","./src/app/_guards/prevent-unsaved-changes.guard.ts","./src/app/modals/confirm-dialog/confirm-dialog.component.ts","./src/app/modals/confirm-dialog/confirm-dialog.component.html","./src/app/app-routing.module.ts","./src/app/_services/confirm.service.ts","./src/app/modals/roles-modal/roles-modal.component.ts","./src/app/modals/roles-modal/roles-modal.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, Input, OnInit, Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\n\n@Component({\n  selector: 'app-date-input',\n  templateUrl: './date-input.component.html',\n  styleUrls: ['./date-input.component.css'],\n})\nexport class DateInputComponent implements ControlValueAccessor {\n  @Input() label: string;\n  @Input() maxDate: Date;\n  bsConfig: Partial<BsDatepickerConfig>;\n\n  constructor(@Self() public ngControl: NgControl) {\n    this.ngControl.valueAccessor = this;\n    this.bsConfig = {\n      containerClass: 'theme-red',\n      dateInputFormat: 'DD MMMM YYYY',\n    };\n  }\n  writeValue(obj: any): void {}\n  registerOnChange(fn: any): void {}\n  registerOnTouched(fn: any): void {}\n  setDisabledState?(isDisabled: boolean): void {}\n}\n","<div class=\"form-group\">\n  <input\n    type=\"text\"\n    [class.is-invalid]=\"ngControl.touched && ngControl.control.errors\"\n    class=\"form-control\"\n    [formControl]=\"ngControl.control\"\n    placeholder=\"{{ label }}\"\n    bsDatepicker\n    [bsConfig]=\"bsConfig\"\n    [maxDate]=\"maxDate\"\n  />\n  <div\n    *ngIf=\"ngControl.control.errors?.required\"\n    class=\"invalid-feedback\"\n  ></div>\n</div>\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  ValidatorFn,\n  Validators,\n} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { AccountService } from '../_services/account.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css'],\n})\nexport class RegisterComponent implements OnInit {\n  @Output() cancelRegister = new EventEmitter();\n  registerForm: FormGroup;\n  maxDate: Date;\n  validationErrors: string[] = [];\n\n  constructor(\n    private accountService: AccountService,\n    private toastr: ToastrService,\n    private fb: FormBuilder,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.initializeForm();\n    this.maxDate = new Date();\n    this.maxDate.setFullYear(this.maxDate.getFullYear() - 18);\n  }\n  initializeForm() {\n    // Only built-in validators (required, minlength, maxlength) must be lowercase in html\n    this.registerForm = this.fb.group({\n      gender: ['male'],\n      username: ['', Validators.required],\n      knownAs: ['', Validators.required],\n      dateOfBirth: ['', Validators.required],\n      city: ['', Validators.required],\n      country: ['', Validators.required],\n      password: [\n        '',\n        [Validators.required, Validators.minLength(4), Validators.maxLength(8)],\n      ],\n      confirmPassword: ['', [Validators.required, this.matchValue('password')]],\n    });\n  }\n  matchValue(matchTo: string): ValidatorFn {\n    // all of form controls derived from AbstractControl\n    return (control: AbstractControl) => {\n      // the control?.value returns the value of the current form control (in this case is confirmPassword). The right-hand side receives an argument which is the Password\n      return control?.value === control?.parent?.controls[matchTo].value\n        ? null\n        : { isMatching: true };\n    };\n  }\n  register() {\n    this.accountService.register(this.registerForm.value).subscribe(\n      (response) => {\n        this.router.navigateByUrl('/members');\n      },\n      (error) => {\n        this.validationErrors = error;\n      }\n    );\n  }\n  cancel() {\n    this.cancelRegister.emit(false);\n  }\n}\n","<form\n  [formGroup]=\"registerForm\"\n  (ngSubmit)=\"registerForm.valid && register()\"\n  autocomplete=\"off\"\n>\n  <h2 class=\"text-center text-primary\">Sign up</h2>\n  <hr />\n  <div class=\"form-group\">\n    <label class=\"control-label\" style=\"margin-right: 10px\">I am a: </label>\n    <label class=\"radio-inline\">\n      <input\n        type=\"radio\"\n        value=\"male\"\n        [formControl]=\"registerForm.controls['gender']\"\n      />\n      Male\n    </label>\n    <label class=\"radio-inline\">\n      <input\n        type=\"radio\"\n        value=\"female\"\n        [formControl]=\"registerForm.controls['gender']\"\n        class=\"ml-3\"\n      />\n      Female\n    </label>\n  </div>\n  <app-text-input\n    [type]=\"'text'\"\n    [formControl]=\"registerForm.controls['username']\"\n    [label]=\"'Username'\"\n  ></app-text-input>\n  <app-text-input\n    [type]=\"'text'\"\n    [formControl]=\"registerForm.controls['knownAs']\"\n    [label]=\"'Known As'\"\n  ></app-text-input>\n  <app-date-input\n    [formControl]=\"registerForm.controls['dateOfBirth']\"\n    [label]=\"'Date of Birth'\"\n    [maxDate]=\"maxDate\"\n  ></app-date-input>\n  <app-text-input\n    [type]=\"'text'\"\n    [formControl]=\"registerForm.controls['city']\"\n    [label]=\"'City'\"\n  ></app-text-input>\n  <app-text-input\n    [type]=\"'text'\"\n    [formControl]=\"registerForm.controls['country']\"\n    [label]=\"'Country'\"\n  ></app-text-input>\n  <app-text-input\n    [type]=\"'password'\"\n    [formControl]=\"registerForm.controls['password']\"\n    [label]=\"'Password'\"\n  ></app-text-input>\n  <app-text-input\n    [type]=\"'password'\"\n    [formControl]=\"registerForm.controls['confirmPassword']\"\n    [label]=\"'Confirm Password'\"\n  ></app-text-input>\n\n  <div class=\"row\" *ngIf=\"validationErrors.length > 0\">\n    <ul class=\"text-danger\">\n      <li *ngFor=\"let error of validationErrors\">\n        {{ error }}\n      </li>\n    </ul>\n  </div>\n  <div class=\"form-group text-center\">\n    <button\n      [disabled]=\"!registerForm.valid\"\n      class=\"btn btn-success mr-2\"\n      type=\"submit\"\n    >\n      Register\n    </button>\n    <button class=\"btn btn-success mr-2\" (click)=\"cancel()\" type=\"button\">\n      Cancel\n    </button>\n  </div>\n</form>\n","import { Message } from '@angular/compiler/src/i18n/i18n_ast';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  Input,\r\n  OnInit,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { MessageService } from 'src/app/_services/message.service';\r\n\r\n@Component({\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  selector: 'app-member-messages',\r\n  templateUrl: './member-messages.component.html',\r\n  styleUrls: ['./member-messages.component.css'],\r\n})\r\nexport class MemberMessagesComponent implements OnInit {\r\n  @ViewChild('messageForm') messageForm: NgForm;\r\n  @Input() messages: Message[];\r\n  @Input() username: string;\r\n  messageContent: string;\r\n  loading = false;\r\n  constructor(public messageService: MessageService) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  sendMessage() {\r\n    this.loading = true;\r\n    this.messageService\r\n      .sendMessage(this.username, this.messageContent)\r\n      .then(() => {\r\n        this.messageForm.reset();\r\n      })\r\n      .finally(() => (this.loading = false));\r\n  }\r\n}\r\n","<div class=\"card\">\r\n  <div\r\n    class=\"card-body\"\r\n    #scrollMe\r\n    style=\"overflow: scroll; height: 535px\"\r\n    [scrollTop]=\"scrollMe.scrollHeight\"\r\n  >\r\n    <div *ngIf=\"(messageService.messageThread$ | async)?.length === 0\">\r\n      No messages yet... say hi by using the message box below\r\n    </div>\r\n\r\n    <ul\r\n      *ngIf=\"(messageService.messageThread$ | async)?.length > 0\"\r\n      class=\"chat\"\r\n    >\r\n      <li *ngFor=\"let message of messageService.messageThread$ | async\">\r\n        <div>\r\n          <span class=\"chat-img float-right\">\r\n            <img\r\n              src=\"{{ message.senderPhotoUrl || './assets/user.png' }}\"\r\n              alt=\"{{ message.senderUsername }}\"\r\n              class=\"rounded-circle\"\r\n            />\r\n          </span>\r\n          <div class=\"chat-body\">\r\n            <div class=\"header\">\r\n              <small class=\"text-muted\">\r\n                <span class=\"fa fa-clock-o\">\r\n                  {{ message.messageSent | timeago }}</span\r\n                >\r\n                <span\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    !message.dateRead && message.senderUsername != username\r\n                  \"\r\n                >\r\n                  (unread)\r\n                </span>\r\n                <span\r\n                  class=\"text-success\"\r\n                  *ngIf=\"message.dateRead && message.senderUsername != username\"\r\n                >\r\n                  (read {{ message.dateRead | timeago }})\r\n                </span>\r\n              </small>\r\n            </div>\r\n            <p>{{ message.content }}</p>\r\n          </div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div class=\"card-footer\">\r\n    <form #messageForm=\"ngForm\" (ngSubmit)=\"sendMessage()\" autocomplete=\"off\">\r\n      <div class=\"input-group\">\r\n        <input\r\n          name=\"messageContent\"\r\n          required\r\n          [(ngModel)]=\"messageContent\"\r\n          type=\"text\"\r\n          class=\"form-control input-sm\"\r\n          placeholder=\"Send a private message\"\r\n        />\r\n        <div class=\"input-group-append\">\r\n          <button\r\n            [disabled]=\"!messageForm.valid || loading\"\r\n            class=\"btn btn-primary\"\r\n            type=\"submit\"\r\n          >\r\n            Send\r\n            <i *ngIf=\"loading\" class=\"fa fa-spinner fa-spin\"></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport { Photo } from 'src/app/_models/photo';\nimport { AdminService } from 'src/app/_services/admin.service';\n\n@Component({\n  selector: 'app-photo-management',\n  templateUrl: './photo-management.component.html',\n  styleUrls: ['./photo-management.component.css'],\n})\nexport class PhotoManagementComponent implements OnInit {\n  photos: Photo[];\n\n  constructor(private adminService: AdminService) {}\n\n  ngOnInit(): void {\n    this.getPhotosForApproval();\n  }\n\n  getPhotosForApproval() {\n    this.adminService.getPhotosForApproval().subscribe((photos) => {\n      this.photos = photos;\n    });\n  }\n\n  approvePhoto(photoId) {\n    this.adminService.approvePhoto(photoId).subscribe(() => {\n      this.photos.splice(\n        this.photos.findIndex((p) => p.id == photoId),\n        1\n      );\n    });\n  }\n\n  rejectPhoto(photoId) {\n    this.adminService.rejectPhoto(photoId).subscribe(() => {\n      this.photos.splice(\n        this.photos.findIndex((p) => p.id == photoId),\n        1\n      );\n    });\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-sm-2\" *ngFor=\"let photo of photos\">\n    <h4>{{ photo.username }}</h4>\n    <img\n      src=\"{{ photo.url }}\"\n      alt=\"{{ photo.username }}\"\n      class=\"img-thumbnail p-1\"\n    />\n    <div class=\"text-center\">\n      <button\n        class=\"btn btn-sm btn-success mr-1\"\n        (click)=\"approvePhoto(photo.id)\"\n      >\n        Approve\n      </button>\n      <button class=\"btn btn-sm btn-danger\" (click)=\"rejectPhoto(photo.id)\">\n        Reject\n      </button>\n    </div>\n  </div>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { env } from 'process';\nimport { ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../_models/user';\nimport { PresenceService } from './presence.service';\n@Injectable({\n  providedIn: 'root',\n})\nexport class AccountService {\n  baseUrl = environment.apiUrl;\n  private currentUserSouce = new ReplaySubject<User>(1);\n  currentUser$ = this.currentUserSouce.asObservable();\n\n  constructor(private http: HttpClient, private presence: PresenceService) {}\n\n  login(model: any) {\n    return this.http.post(this.baseUrl + 'account/login', model).pipe(\n      map((response: User) => {\n        const user = response;\n        if (user) {\n          this.setCurrentUser(user);\n          this.presence.createHubConnection(user);\n        }\n      })\n    );\n  }\n  register(model: any) {\n    return this.http.post(this.baseUrl + 'account/register', model).pipe(\n      map((user: User) => {\n        if (user) {\n          this.setCurrentUser(user);\n          this.presence.createHubConnection(user);\n        }\n        return user;\n      })\n    );\n  }\n  setCurrentUser(user: User) {\n    user.roles = [];\n    const roles = this.getDecodedToken(user.token).role;\n    Array.isArray(roles) ? (user.roles = roles) : user.roles.push(roles);\n\n    localStorage.setItem('user', JSON.stringify(user));\n\n    this.currentUserSouce.next(user);\n  }\n  logout() {\n    localStorage.removeItem('user');\n    this.currentUserSouce.next(null);\n    this.presence.stopHubConnection();\n  }\n\n  getDecodedToken(token) {\n    // token includes 3 parts: header, payload, and signature\n    return JSON.parse(atob(token.split('.')[1]));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n  <h1>Not Found</h1>\n  <button class=\"btn btn-info btn-lg\" routerLink=\"/\">Return to Home</button>\n</div>\n","import {\n  Directive,\n  Input,\n  OnInit,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport { take } from 'rxjs/operators';\nimport { User } from '../_models/user';\nimport { AccountService } from '../_services/account.service';\n\n// STRUCTURAL DIRECTIVE\n\n@Directive({\n  selector: '[appHasRole]', //*appHasRole='[\"Admin\"]'\n})\nexport class HasRoleDirective implements OnInit {\n  @Input() appHasRole: string[];\n  user: User;\n\n  constructor(\n    private viewContainerRef: ViewContainerRef,\n    private templateRef: TemplateRef<any>,\n    private accountService: AccountService\n  ) {\n    this.accountService.currentUser$.pipe(take(1)).subscribe((user) => {\n      this.user = user;\n    });\n  }\n  ngOnInit(): void {\n    // clear view if no roles\n    if (!this.user?.roles || this.user == null) {\n      this.viewContainerRef.clear();\n      return;\n    }\n\n    if (this.user?.roles.some((r) => this.appHasRole.includes(r))) {\n      this.viewContainerRef.createEmbeddedView(this.templateRef);\n    } else {\n      this.viewContainerRef.clear();\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BusyService {\n  busyRequestCount = 0;\n\n  constructor(private spinnerService: NgxSpinnerService) {}\n\n  busy() {\n    this.busyRequestCount++;\n    this.spinnerService.show(undefined, {\n      type: 'line-scale-party',\n      bdColor: 'rgba(255,255,255,0)',\n      color: '#333333',\n    });\n  }\n\n  idle() {\n    this.busyRequestCount--;\n    if (this.busyRequestCount <= 0) {\n      this.busyRequestCount = 0;\n      this.spinnerService.hide();\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AccountService } from '../_services/account.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n})\nexport class HomeComponent implements OnInit {\n  registerMode = false; // if we dont' declare a type, typescript will choose the correct type base on the value of the var\n\n  constructor(public accountService: AccountService) {}\n\n  ngOnInit(): void {}\n\n  registerToggle() {\n    this.registerMode = !this.registerMode;\n  }\n  cancelRegisterMode(event: boolean) {\n    this.registerMode = event;\n  }\n}\n","<div class=\"container mt-5\">\n  <div *ngIf=\"!registerMode\" style=\"text-align: center\">\n    <h1>Find your match</h1>\n    <p class=\"lead\">\n      Come on in to view your mmatches... all you need to do is sign up!\n    </p>\n    <div class=\"text-center\">\n      <button\n        [hidden]=\"accountService.currentUser$ | async\"\n        (click)=\"registerToggle()\"\n        class=\"btn btn-primary btn-lg mr-2\"\n      >\n        Register\n      </button>\n      <button class=\"btn btn-info btn-lg\">Learn more</button>\n    </div>\n  </div>\n\n  <div *ngIf=\"registerMode\" class=\"container\">\n    <div class=\"row justify-content-center\">\n      <div class=\"col-4\">\n        <app-register\n          (cancelRegister)=\"cancelRegisterMode($event)\"\n        ></app-register>\n      </div>\n    </div>\n  </div>\n</div>\n","export interface Pagination {\r\n  currentPage: number;\r\n  itemsPerPage: number;\r\n  totalItems: number;\r\n  totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n  result: T;\r\n  pagination: Pagination;\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'https://localhost:5001/api/',\n  hubUrl: 'https://localhost:5001/hubs/',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AccountService } from '../_services/account.service';\nimport { User } from '../_models/user';\nimport { take } from 'rxjs/operators';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n  constructor(private accountService: AccountService) {}\n\n  intercept(\n    request: HttpRequest<unknown>,\n    next: HttpHandler\n  ): Observable<HttpEvent<unknown>> {\n    let currentUser: User;\n\n    this.accountService.currentUser$\n      .pipe(take(1))\n      .subscribe((user) => (currentUser = user));\n\n    if (currentUser) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${currentUser.token}`,\n        },\n      });\n    }\n    return next.handle(request);\n  }\n}\n","import { Message } from '../_models/message';\nimport { Component, OnInit } from '@angular/core';\nimport { Pagination } from '../_models/pagination';\nimport { MessageService } from '../_services/message.service';\nimport { ConfirmService } from '../_services/confirm.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css'],\n})\nexport class MessagesComponent implements OnInit {\n  messages: Message[] = [];\n  pagination: Pagination;\n  container = 'Unread';\n  pageNumber = 1;\n  pageSize = 5;\n  loading = false;\n\n  constructor(\n    private messageService: MessageService,\n    private confirmService: ConfirmService\n  ) {}\n\n  ngOnInit(): void {\n    this.loadMessages();\n  }\n\n  loadMessages() {\n    this.loading = true;\n    this.messageService\n      .getMessages(this.pageNumber, this.pageSize, this.container)\n      .subscribe((res) => {\n        this.messages = res.result;\n        this.pagination = res.pagination;\n        this.loading = false;\n      });\n  }\n\n  pageChanged(event: any) {\n    this.pageNumber = event.page;\n    this.loadMessages();\n  }\n\n  deleteMessage(id: number) {\n    this.confirmService\n      .confirm('Confirm delete message', 'This cannot be undone')\n      .subscribe((result) => {\n        if (result) {\n          this.messageService.deleteMessage(id).subscribe(() => {\n            this.messages.splice(\n              this.messages.findIndex((m) => m.id == id),\n              1\n            );\n          });\n        }\n      });\n  }\n}\n","<div class=\"row mb-4\">\n  <div class=\"btn-group\" name=\"container\">\n    <button\n      class=\"btn btn-primary\"\n      btnRadio=\"Unread\"\n      [(ngModel)]=\"container\"\n      (click)=\"loadMessages()\"\n    >\n      <i class=\"fa fa-envelope\"></i> Unread\n    </button>\n    <button\n      class=\"btn btn-primary\"\n      btnRadio=\"Inbox\"\n      [(ngModel)]=\"container\"\n      (click)=\"loadMessages()\"\n    >\n      <i class=\"fa fa-envelope-open\"></i> Inbox\n    </button>\n    <button\n      class=\"btn btn-primary\"\n      btnRadio=\"Outbox\"\n      [(ngModel)]=\"container\"\n      (click)=\"loadMessages()\"\n    >\n      <i class=\"fa fa-paper-plane\"></i> Outbox\n    </button>\n  </div>\n</div>\n\n<div class=\"row\" *ngIf=\"messages?.length === 0\">\n  <h3>No messages</h3>\n</div>\n\n<div class=\"row\" *ngIf=\"messages?.length > 0\">\n  <table class=\"table table-hover\" style=\"cursor: pointer\">\n    <tr>\n      <th style=\"width: 40%\">Message</th>\n      <th style=\"width: 20%\">From / To</th>\n      <th style=\"width: 20%\">Sent / Received</th>\n      <th style=\"width: 20%\">Message</th>\n    </tr>\n\n    <tr\n      [hidden]=\"loading\"\n      *ngFor=\"let message of messages\"\n      routerLink=\"{{\n        container === 'Outbox'\n          ? '/members/' + message.recipientUserName\n          : '/members/' + message.senderUsername\n      }}\"\n      [queryParams]=\"{ tab: 3 }\"\n    >\n      <td>{{ message.content }}</td>\n      <td>\n        <div *ngIf=\"container == 'Outbox'\">\n          <img\n            class=\"img-circle rounder-circle mr-2\"\n            src=\"{{ message.recipientPhotoUrl || './assets/user.png' }}\"\n            alt=\"{{ message.recipientPhotoUrl }}\"\n          />\n          <strong>{{ message.recipientUserName | titlecase }}</strong>\n        </div>\n        <div *ngIf=\"container !== 'Outbox'\">\n          <img\n            class=\"img-circle rounder-circle mr-2\"\n            src=\"{{ message.senderPhotoUrl || './assets/user.png' }}\"\n            alt=\"{{ message.senderPhotoUrl }}\"\n          />\n          <strong>{{ message.senderUsername | titlecase }}</strong>\n        </div>\n      </td>\n      <td>{{ message.messageSent | timeago }}</td>\n      <td>\n        <button\n          (click)=\"$event.stopPropagation()\"\n          (click)=\"deleteMessage(message.id)\"\n          class=\"btn btn-danger\"\n        >\n          Delete\n        </button>\n      </td>\n    </tr>\n  </table>\n</div>\n\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination && !loading\">\n  <pagination\n    [boundaryLinks]=\"true\"\n    [totalItems]=\"pagination.totalItems\"\n    [itemsPerPage]=\"pagination.itemsPerPage\"\n    [(ngModel)]=\"pagination.currentPage\"\n    (pageChanged)=\"pageChanged($event)\"\n    previousText=\"&lsaquo;\"\n    nextText=\"&rsaquo;\"\n    firstText=\"&laquo;\"\n    lastText=\"&raquo;\"\n  >\n  </pagination>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Member } from '../_models/member';\r\nimport { MembersService } from '../_services/members.service';\r\nimport { PresenceService } from '../_services/presence.service';\r\n\r\n@Component({\r\n  selector: 'app-member-card',\r\n  templateUrl: './member-card.component.html',\r\n  styleUrls: ['./member-card.component.css'],\r\n})\r\nexport class MemberCardComponent implements OnInit {\r\n  @Input() member: Member;\r\n\r\n  constructor(\r\n    private memberService: MembersService,\r\n    private toastr: ToastrService,\r\n    public presence: PresenceService\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  addLike(member: Member) {\r\n    this.memberService.addLike(member.username).subscribe(() => {\r\n      this.toastr.success('You have liked ' + member.username);\r\n    });\r\n  }\r\n}\r\n","<div class=\"card mb-4\">\r\n  <div class=\"card-img-wrapper\">\r\n    <img\r\n      src=\"{{ member.photoUrl || './assets/user.png' }}\"\r\n      alt=\"{{ member.knownAs }}\"\r\n      class=\"card-img-top\"\r\n    />\r\n    <ul class=\"list-inline member-icons animate text-center\">\r\n      <li class=\"list-inline-item\">\r\n        <button\r\n          class=\"btn btn-primary\"\r\n          routerLink=\"/members/{{ member.username }}\"\r\n        >\r\n          <i class=\"fa fa-user\"></i>\r\n        </button>\r\n      </li>\r\n      <li class=\"list-inline-item\">\r\n        <button (click)=\"addLike(member)\" class=\"btn btn-primary\">\r\n          <i class=\"fa fa-heart\"></i>\r\n        </button>\r\n      </li>\r\n      <li\r\n        class=\"list-inline-item\"\r\n        routerLink=\"/members/{{ member.username }}\"\r\n        [queryParams]=\"{ tab: 3 }\"\r\n      >\r\n        <button class=\"btn btn-primary\"><i class=\"fa fa-envelope\"></i></button>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div class=\"card-body p-1\">\r\n    <h6 class=\"card-title text-center mb-1\">\r\n      <span\r\n        [class.is-online]=\"\r\n          (presence.onlineUsers$ | async).includes(member.username)\r\n        \"\r\n      >\r\n        <i class=\"fa fa-user mr-2\"></i>\r\n      </span>\r\n      {{ member.knownAs }}, {{ member.age }}\r\n    </h6>\r\n    <p class=\"card-text text-muted text-center\">{{ member.city }}</p>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ToastrModule } from 'ngx-toastr';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { NgxGalleryModule } from '@kolkov/ngx-gallery';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { TimeagoModule } from 'ngx-timeago';\nimport { ModalModule } from 'ngx-bootstrap/modal';\n\n// This module bundles/groups up bootstrap components into one and export all as a single shared module for clean code\n// bootstrap components require .forRoot()\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    BsDropdownModule.forRoot(),\n    ToastrModule.forRoot({\n      positionClass: 'toast-bottom-right',\n    }),\n    TabsModule.forRoot(),\n    NgxGalleryModule,\n    FileUploadModule,\n    BsDatepickerModule.forRoot(),\n    PaginationModule.forRoot(),\n    ButtonsModule.forRoot(),\n    TimeagoModule.forRoot(),\n    ModalModule.forRoot(),\n  ],\n  // make it global\n  exports: [\n    BsDropdownModule,\n    ToastrModule,\n    TabsModule,\n    NgxGalleryModule,\n    FileUploadModule,\n    BsDatepickerModule,\n    PaginationModule,\n    ButtonsModule,\n    TimeagoModule,\n    ModalModule,\n  ],\n})\nexport class SharedModule {}\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n} from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { NavigationExtras, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n  constructor(private router: Router, private toastr: ToastrService) {}\r\n\r\n  intercept(\r\n    request: HttpRequest<unknown>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<unknown>> {\r\n    return next.handle(request).pipe(\r\n      catchError((error) => {\r\n        if (error) {\r\n          switch (error.status) {\r\n            case 400:\r\n              if (error.error.errors) {\r\n                const modalStateErrors = [];\r\n                for (const key in error.error.errors) {\r\n                  if (error.error.errors[key]) {\r\n                    modalStateErrors.push(error.error.errors[key]);\r\n                  }\r\n                }\r\n                throw modalStateErrors.flat();\r\n              } else if (typeof error.error === 'object') {\r\n                this.toastr.error(error.statusText, error.status);\r\n              } else {\r\n                this.toastr.error(error.error, error.status);\r\n              }\r\n              break;\r\n            case 401:\r\n              this.toastr.error(error.statusText, error.status);\r\n              break;\r\n            case 404:\r\n              this.router.navigateByUrl('/not-found');\r\n              break;\r\n            case 500:\r\n              const navigationExtras: NavigationExtras = {\r\n                state: { error: error.error },\r\n              };\r\n              this.router.navigateByUrl('/server-error', navigationExtras);\r\n              break;\r\n            default:\r\n              this.toastr.error('Something unexpected went wrong');\r\n              console.log(error);\r\n              break;\r\n          }\r\n        }\r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AccountService } from '../_services/account.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AdminGuard implements CanActivate {\n  constructor(\n    private accountService: AccountService,\n    private toastr: ToastrService\n  ) {}\n  canActivate(): Observable<boolean> {\n    return this.accountService.currentUser$.pipe(\n      map((user) => {\n        if (user.roles.includes('Admin') || user.roles.includes('Moderator')) {\n          return true;\n        }\n        this.toastr.error('You cannot enter this area');\n      })\n    );\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { Photo } from '../_models/photo';\nimport { User } from '../_models/user';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AdminService {\n  baseUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient) {}\n\n  getUsersWithRoles() {\n    return this.http.get<Partial<User[]>>(\n      this.baseUrl + 'admin/users-with-roles'\n    );\n  }\n\n  updateUserRoles(username: string, roles: string[]) {\n    return this.http.post(\n      this.baseUrl + 'admin/edit-roles/' + username + '?roles=' + roles,\n      {}\n    );\n  }\n\n  getPhotosForApproval() {\n    return this.http.get<Photo[]>(this.baseUrl + 'admin/photos-to-moderate');\n  }\n\n  approvePhoto(photoId: number) {\n    return this.http.post(this.baseUrl + 'admin/approve-photo/' + photoId, {});\n  }\n\n  rejectPhoto(photoId: number) {\n    return this.http.post(this.baseUrl + '/admin/reject-photo/' + photoId, {});\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { RolesModalComponent } from 'src/app/modals/roles-modal/roles-modal.component';\nimport { User } from 'src/app/_models/user';\nimport { AdminService } from 'src/app/_services/admin.service';\n\n@Component({\n  selector: 'app-user-management',\n  templateUrl: './user-management.component.html',\n  styleUrls: ['./user-management.component.css'],\n})\nexport class UserManagementComponent implements OnInit {\n  users: Partial<User[]>;\n  bsModalRef: BsModalRef;\n\n  constructor(\n    private adminService: AdminService,\n    private modalService: BsModalService\n  ) {}\n\n  ngOnInit(): void {\n    this.getUsersWithRoles();\n  }\n\n  getUsersWithRoles() {\n    this.adminService.getUsersWithRoles().subscribe((users) => {\n      this.users = users;\n    });\n  }\n\n  openRolesModal(user: User) {\n    const config = {\n      class: 'modal-dialog-centered',\n      initialState: {\n        user,\n        roles: this.getRolesArray(user),\n      },\n    };\n    this.bsModalRef = this.modalService.show(RolesModalComponent, config);\n    this.bsModalRef.content.updateSelectedRoles.subscribe((values) => {\n      const rolesToUpdate = {\n        roles: [\n          ...values\n            .filter((role) => role.checked === true)\n            .map((role) => role.name),\n        ],\n      };\n      if (rolesToUpdate) {\n        this.adminService\n          .updateUserRoles(user.username, rolesToUpdate.roles)\n          .subscribe(() => {\n            user.roles = [...rolesToUpdate.roles];\n          });\n      }\n    });\n  }\n\n  private getRolesArray(user) {\n    const roles = [];\n    const userRoles = user.roles;\n\n    // values can be checked in the checkbox\n    const availableRoles: any[] = [\n      { name: 'Admin', value: 'Admin' },\n      { name: 'Moderator', value: 'Moderator' },\n      { name: 'Member', value: 'Member' },\n    ];\n\n    availableRoles.forEach((role) => {\n      let isMatch = false;\n      for (const userRole of userRoles) {\n        if (role.name === userRole) {\n          isMatch = true;\n          role.checked = true;\n          roles.push(role);\n          break;\n        }\n      }\n      if (!isMatch) {\n        role.checked = false;\n        roles.push(role);\n      }\n    });\n    return roles;\n  }\n}\n","<div class=\"row\">\n  <table class=\"table\">\n    <tr>\n      <th style=\"width: 30%\">Username</th>\n      <th style=\"width: 40%\">Active roles</th>\n      <th style=\"width: 30%\"></th>\n    </tr>\n    <tr *ngFor=\"let user of users\">\n      <th>{{ user.username }}</th>\n      <th>{{ user.roles }}</th>\n      <th>\n        <button (click)=\"openRolesModal(user)\" class=\"btn btn-info\">\n          Edit Roles\n        </button>\n      </th>\n    </tr>\n  </table>\n</div>\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Member } from 'src/app/_models/member';\nimport { MembersService } from 'src/app/_services/members.service';\nimport { NgxGalleryOptions } from '@kolkov/ngx-gallery';\nimport { NgxGalleryImage } from '@kolkov/ngx-gallery';\nimport { NgxGalleryAnimation } from '@kolkov/ngx-gallery';\nimport { TabDirective, TabsetComponent } from 'ngx-bootstrap/tabs';\nimport { MessageService } from 'src/app/_services/message.service';\nimport { PresenceService } from 'src/app/_services/presence.service';\nimport { AccountService } from 'src/app/_services/account.service';\nimport { User } from 'src/app/_models/user';\nimport { Message } from 'src/app/_models/message';\nimport { take } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-member-detail',\n  templateUrl: './member-detail.component.html',\n  styleUrls: ['./member-detail.component.css'],\n})\nexport class MemberDetailComponent implements OnInit, OnDestroy {\n  @ViewChild('memberTabs', { static: true }) memberTabs: TabsetComponent;\n  member: Member;\n  galleryOptions: NgxGalleryOptions[];\n  galleryImages: NgxGalleryImage[];\n  activeTab: TabDirective;\n  messages: Message[] = [];\n  user: User;\n\n  constructor(\n    private memberService: MembersService,\n    private route: ActivatedRoute,\n    private messageService: MessageService,\n    public presense: PresenceService,\n    private accountService: AccountService,\n    private router: Router\n  ) {\n    // get access to current user\n    this.accountService.currentUser$\n      .pipe(take(1))\n      .subscribe((user) => (this.user = user));\n\n    this.router.routeReuseStrategy.shouldReuseRoute = () => false;\n  }\n\n  ngOnInit(): void {\n    this.galleryOptions = [\n      {\n        width: '500px',\n        height: '500px',\n        thumbnailsColumns: 4,\n        imagePercent: 80,\n        imageAnimation: NgxGalleryAnimation.Slide,\n        preview: false,\n      },\n    ];\n    this.route.data.subscribe((data) => {\n      this.member = data.member;\n    });\n    this.route.queryParams.subscribe((params) => {\n      params.tab ? this.selectTab(params.tab) : this.selectTab(0);\n    });\n\n    this.galleryImages = this.getImages();\n  }\n\n  getImages(): NgxGalleryImage[] {\n    const imageUrls = [];\n    for (const photo of this.member.photos) {\n      imageUrls.push({\n        small: photo?.url,\n        medium: photo?.url,\n        big: photo?.url,\n      });\n    }\n    return imageUrls;\n  }\n\n  loadMessages() {\n    this.messageService\n      .getMessageThread(this.member.username)\n      .subscribe((messages) => {\n        this.messages = messages;\n      });\n  }\n\n  selectTab(tabId: number) {\n    this.memberTabs.tabs[tabId].active = true;\n  }\n\n  onTabActivated(data: TabDirective) {\n    this.activeTab = data;\n    if (this.activeTab.heading == 'Messages' && this.messages.length === 0) {\n      // connect to hub and get messages btw current user and the target user\n      this.messageService.createHubConnection(this.user, this.member.username);\n    } else {\n      // if switch to other tab, disconnect from hub\n      this.messageService.stopHubConnection();\n    }\n  }\n\n  // when component is destroyed, stop the connection\n  ngOnDestroy(): void {\n    this.messageService.stopHubConnection();\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-4\">\n    <div class=\"card\">\n      <img\n        src=\"{{ member.photoUrl || './assets/user.png' }}\"\n        alt=\"{{ member.knownAs }}\"\n        class=\"card-img-top img-thumbnail\"\n      />\n\n      <div class=\"card-body\">\n        <div\n          class=\"mb-2\"\n          *ngIf=\"(presense.onlineUsers$ | async).includes(member.username)\"\n        >\n          <i class=\"fa fa-user-circle text-success\"></i> Online now\n        </div>\n        <div>\n          <strong>Location:</strong>\n          <p>{{ member.city }}, {{ member.city }}</p>\n        </div>\n        <div>\n          <strong>Age:</strong>\n          <p>{{ member.age }}</p>\n        </div>\n        <div>\n          <strong>Last Active:</strong>\n          <p>{{ member.lastActive | timeago }}</p>\n        </div>\n        <div>\n          <strong>Member Since:</strong>\n          <p>{{ member.created | date: \"dd MMM yyyy\" }}</p>\n        </div>\n      </div>\n      <div class=\"card-footer\">\n        <div class=\"btn-group d-flex\">\n          <button class=\"btn btn-primary\">Like</button>\n          <!-- click this button below to navigate to the message tab -->\n          <button class=\"btn btn-primary\" (click)=\"selectTab(3)\">\n            Message\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"col-8\">\n    <tabset class=\"member-tabset\" #memberTabs>\n      <tab\n        heading=\"About {{ member.knownAs }}\"\n        (selectTab)=\"onTabActivated($event)\"\n      >\n        <h4>Description</h4>\n        <p>{{ member.introduction }}</p>\n        <h4>Looking for</h4>\n        <p>{{ member.lookingFor }}</p>\n      </tab>\n      <tab heading=\"Interests\" (selectTab)=\"onTabActivated($event)\">\n        <h4>Interests</h4>\n        <p>{{ member.interests }}</p>\n      </tab>\n      <tab heading=\"Photos\" (selectTab)=\"onTabActivated($event)\">\n        <ngx-gallery\n          [options]=\"galleryOptions\"\n          [images]=\"galleryImages\"\n          style=\"display: inline-block; margin-bottom: 20px\"\n        ></ngx-gallery>\n      </tab>\n      <tab heading=\"Messages\" (selectTab)=\"onTabActivated($event)\">\n        <app-member-messages [username]=\"member.username\"></app-member-messages>\n      </tab>\n    </tabset>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable, TimeoutError } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AccountService } from '../_services/account.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private accountService: AccountService,\n    private toastr: ToastrService\n  ) {}\n  canActivate(): Observable<boolean> {\n    return this.accountService.currentUser$.pipe(\n      map((user) => {\n        // if logged in\n        if (user) return true;\n\n        // else no logged in\n        this.toastr.error('You shall not pass!');\n      })\n    );\n  }\n}\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Message } from '../_models/message';\r\nimport { Group } from '../_models/group';\r\nimport { User } from '../_models/user';\r\nimport { getPaginatedResult, getPaginationHeaders } from './paginationHelper';\r\nimport { BusyService } from './busy.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MessageService {\r\n  baseUrl = environment.apiUrl;\r\n  hubUrl = environment.hubUrl;\r\n  private hubConnection: HubConnection;\r\n  private messageThreadSource = new BehaviorSubject<Message[]>([]);\r\n  messageThread$ = this.messageThreadSource.asObservable();\r\n\r\n  constructor(private http: HttpClient, private busyService: BusyService) {}\r\n\r\n  createHubConnection(user: User, otherUsername: string) {\r\n    this.busyService.busy();\r\n    this.hubConnection = new HubConnectionBuilder()\r\n      .withUrl(this.hubUrl + 'message?user=' + otherUsername, {\r\n        accessTokenFactory: () => user.token,\r\n      })\r\n      .withAutomaticReconnect()\r\n      .build();\r\n\r\n    this.hubConnection\r\n      .start()\r\n      .catch((error) => console.log(error))\r\n      .finally(() => this.busyService.idle());\r\n\r\n    this.hubConnection.on('ReceiveMessageThread', (messages) => {\r\n      this.messageThreadSource.next(messages);\r\n    });\r\n\r\n    this.hubConnection.on('NewMessage', (message) => {\r\n      this.messageThread$.pipe(take(1)).subscribe((messages) => {\r\n        this.messageThreadSource.next([...messages, message]); // create a new array, not mutating\r\n      });\r\n    });\r\n\r\n    this.hubConnection.on('UpdatedGroup', (group: Group) => {\r\n      if (group.connection.some((x) => x.username === otherUsername)) {\r\n        this.messageThread$.pipe(take(1)).subscribe((messages) => {\r\n          messages.forEach((message) => {\r\n            if (!message.dateRead) {\r\n              message.dateRead = new Date(Date.now());\r\n            }\r\n          });\r\n          this.messageThreadSource.next([...messages]);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  stopHubConnection() {\r\n    // if user switch tab => stop connection, then move to new components => stop connection but no hub to stop which may provoke an error\r\n    if (this.hubConnection) {\r\n      this.messageThreadSource.next([]);\r\n      this.hubConnection.stop();\r\n    }\r\n  }\r\n\r\n  getMessages(pageNumber, pageSize, container) {\r\n    let params = getPaginationHeaders(pageNumber, pageSize);\r\n    params = params.append('Container', container);\r\n    return getPaginatedResult<Message[]>(\r\n      this.baseUrl + 'messages',\r\n      params,\r\n      this.http\r\n    );\r\n  }\r\n\r\n  getMessageThread(username: string) {\r\n    return this.http.get<Message[]>(\r\n      this.baseUrl + 'messages/thread/' + username\r\n    );\r\n  }\r\n  async sendMessage(username: string, content: string) {\r\n    // hub invoke return a promise\r\n    return this.hubConnection\r\n      .invoke('SendMessage', {\r\n        recipientUsername: username,\r\n        content,\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }\r\n\r\n  deleteMessage(id: number) {\r\n    return this.http.delete(this.baseUrl + 'messages/' + id);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { Member } from 'src/app/_models/member';\r\nimport { Pagination } from 'src/app/_models/pagination';\r\nimport { User } from 'src/app/_models/user';\r\nimport { UserParams } from 'src/app/_models/userParams';\r\nimport { AccountService } from 'src/app/_services/account.service';\r\nimport { MembersService } from 'src/app/_services/members.service';\r\n\r\n@Component({\r\n  selector: 'app-member-list',\r\n  templateUrl: './member-list.component.html',\r\n  styleUrls: ['./member-list.component.css'],\r\n})\r\nexport class MemberListComponent implements OnInit {\r\n  members: Member[];\r\n  pagination: Pagination;\r\n  userParams: UserParams;\r\n  user: User;\r\n  genderList = [\r\n    { value: 'male', display: 'Males' },\r\n    { value: 'female', display: 'Females' },\r\n  ];\r\n\r\n  constructor(\r\n    private memberService: MembersService,\r\n    private accountService: AccountService\r\n  ) {\r\n    this.userParams = this.memberService.userParams;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadMembers();\r\n  }\r\n  loadMembers() {\r\n    this.memberService.setUserParams(this.userParams);\r\n    this.memberService.getMembers(this.userParams).subscribe((response) => {\r\n      this.members = response.result;\r\n      this.pagination = response.pagination;\r\n    });\r\n  }\r\n\r\n  resetFilters() {\r\n    this.userParams = this.memberService.resetUserParams();\r\n    this.loadMembers();\r\n  }\r\n\r\n  pageChanged(event: any) {\r\n    this.userParams.pageNumber = event.page;\r\n    this.memberService.setUserParams(this.userParams);\r\n    this.loadMembers();\r\n  }\r\n}\r\n","<div class=\"text-center mt-3\">\n  <h2>Your matches - {{ pagination?.totalItems }} found</h2>\n</div>\n\n<div class=\"container mt-3\">\n  <form\n    #form=\"ngForm\"\n    class=\"form-inline mb-3\"\n    (ngSubmit)=\"loadMembers()\"\n    autocomplete=\"off\"\n  >\n    <div class=\"form-group\">\n      <label> Age from: </label>\n      <input\n        type=\"number\"\n        class=\"form-control ml-1\"\n        style=\"width: 70px\"\n        name=\"minAge\"\n        [(ngModel)]=\"userParams.minAge\"\n      />\n    </div>\n    <div class=\"form-group px-2\">\n      <label> Age to: </label>\n      <input\n        type=\"number\"\n        class=\"form-control ml-1\"\n        style=\"width: 70px\"\n        name=\"maxAge\"\n        [(ngModel)]=\"userParams.maxAge\"\n      />\n    </div>\n    <div class=\"form-group\">\n      <label>Show: </label>\n      <select\n        name=\"gender\"\n        style=\"width: 130px\"\n        [(ngModel)]=\"userParams.gender\"\n        class=\"form-control ml-1\"\n      >\n        <option *ngFor=\"let gender of genderList\" [value]=\"gender.value\">\n          {{ gender.display }}\n        </option>\n      </select>\n    </div>\n\n    <button class=\"btn btn-primary ml-1\" type=\"submit\">Apply Filters</button>\n    <button (click)=\"resetFilters()\" class=\"btn btn-info ml-1\" type=\"submit\">\n      Reset Filters\n    </button>\n    <div class=\"col\">\n      <div class=\"btn-group float-right\">\n        <button\n          type=\"button\"\n          class=\"btn btn-primary\"\n          name=\"orderBy\"\n          (click)=\"loadMembers()\"\n          btnRadio=\"lastActive\"\n          [(ngModel)]=\"userParams.orderBy\"\n        >\n          Last Active\n        </button>\n        <button\n          type=\"button\"\n          class=\"btn btn-primary\"\n          name=\"orderBy\"\n          (click)=\"loadMembers()\"\n          btnRadio=\"created\"\n          [(ngModel)]=\"userParams.orderBy\"\n        >\n          Newest Members\n        </button>\n      </div>\n    </div>\n  </form>\n</div>\n\n<div class=\"row\">\n  <div class=\"col-2\" *ngFor=\"let member of members\">\n    <app-member-card [member]=\"member\"></app-member-card>\n  </div>\n</div>\n\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination\">\n  <pagination\n    [boundaryLinks]=\"true\"\n    [totalItems]=\"pagination.totalItems\"\n    [itemsPerPage]=\"pagination.itemsPerPage\"\n    [(ngModel)]=\"pagination.currentPage\"\n    (pageChanged)=\"pageChanged($event)\"\n    previousText=\"&lsaquo;\"\n    nextText=\"&rsaquo;\"\n    firstText=\"&laquo;\"\n    lastText=\"&raquo;\"\n  >\n  </pagination>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { User } from './_models/user';\nimport { AccountService } from './_services/account.service';\nimport { PresenceService } from './_services/presence.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n  title = 'Social App';\n  users: any;\n\n  constructor(\n    private AccountService: AccountService,\n    private presence: PresenceService\n  ) {}\n  ngOnInit() {\n    this.setCurrentUser();\n  }\n  setCurrentUser() {\n    const user: User = JSON.parse(localStorage.getItem('user'));\n    if (user) {\n      this.AccountService.setCurrentUser(user);\n      this.presence.createHubConnection(user);\n    }\n  }\n}\n","<ngx-spinner>\r\n  <h3>Loading...</h3>\r\n</ngx-spinner>\r\n\r\n<app-nav></app-nav>\r\n\r\n<div class=\"container\" style=\"margin-top: 100px\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { BusyService } from '../_services/busy.service';\r\nimport { delay, finalize } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class LoadingInterceptor implements HttpInterceptor {\r\n  constructor(private busyService: BusyService) {}\r\n\r\n  intercept(\r\n    request: HttpRequest<unknown>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<unknown>> {\r\n    this.busyService.busy();\r\n    return next.handle(request).pipe(\r\n      // delay creates a waiting experience for dev, but shouldn't be used in production\r\n      // delay(1000),\r\n      finalize(() => {\r\n        this.busyService.idle();\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { of } from 'rxjs';\r\nimport { map, take } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Member } from '../_models/member';\r\nimport { PaginatedResult } from '../_models/pagination';\r\nimport { User } from '../_models/user';\r\nimport { UserParams } from '../_models/userParams';\r\nimport { AccountService } from './account.service';\r\nimport { getPaginatedResult, getPaginationHeaders } from './paginationHelper';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MembersService {\r\n  baseUrl = environment.apiUrl;\r\n  members: Member[] = [];\r\n  memberCache = new Map();\r\n  user: User;\r\n  userParams: UserParams;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private accountService: AccountService\r\n  ) {\r\n    this.accountService.currentUser$.pipe(take(1)).subscribe((user) => {\r\n      this.user = user;\r\n      this.userParams = new UserParams(user);\r\n    });\r\n  }\r\n\r\n  getUserParams() {\r\n    return this.userParams;\r\n  }\r\n\r\n  setUserParams(params: UserParams) {\r\n    this.userParams = params;\r\n  }\r\n\r\n  resetUserParams() {\r\n    this.userParams = new UserParams(this.user);\r\n    return this.userParams;\r\n  }\r\n\r\n  getMembers(userParams: UserParams) {\r\n    // Caching\r\n    var response = this.memberCache.get(Object.values(userParams).join('-'));\r\n    if (response) {\r\n      return of(response);\r\n    }\r\n\r\n    let params = getPaginationHeaders(\r\n      userParams.pageNumber,\r\n      userParams.pageSize\r\n    );\r\n\r\n    // stack up filter layers\r\n    params = params.append('minAge', userParams.minAge.toString());\r\n    params = params.append('maxAge', userParams.maxAge.toString());\r\n    params = params.append('gender', userParams.gender);\r\n    params = params.append('orderBy', userParams.orderBy); //either created or last active\r\n\r\n    return getPaginatedResult<Member[]>(\r\n      this.baseUrl + 'users',\r\n      params,\r\n      this.http\r\n    ).pipe(\r\n      map((res) => {\r\n        this.memberCache.set(Object.values(userParams).join('-'), res);\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  getMember(username: string) {\r\n    // const member = this.members.find((x) => x.username === username);\r\n    // if (member !== undefined) return of(member);\r\n    const member = [...this.memberCache.values()]\r\n      .reduce((arr, elem) => arr.concat(elem.result), [])\r\n      .find((member: Member) => member.username == username);\r\n\r\n    if (member) return of(member);\r\n\r\n    return this.http.get<Member>(this.baseUrl + 'users/' + username);\r\n  }\r\n\r\n  updateMember(member: Member) {\r\n    return this.http.put(this.baseUrl + 'users', member).pipe(\r\n      map(() => {\r\n        const index = this.members.indexOf(member);\r\n        this.members[index] = member;\r\n      })\r\n    );\r\n  }\r\n\r\n  setMainPhoto(photoId: number) {\r\n    return this.http.put(this.baseUrl + 'users/set-main-photo/' + photoId, {});\r\n  }\r\n\r\n  deletePhoto(photoId: number) {\r\n    return this.http.delete(this.baseUrl + 'users/delete-photo/' + photoId);\r\n  }\r\n\r\n  addLike(username: string) {\r\n    // http.post need a route and body\r\n    return this.http.post(this.baseUrl + 'likes/' + username, {});\r\n  }\r\n\r\n  getLikes(predicate: string, pageNumber, pageSize) {\r\n    let params = getPaginationHeaders(pageNumber, pageSize);\r\n    params = params.append('predicate', predicate);\r\n\r\n    return getPaginatedResult<Partial<Member[]>>(\r\n      this.baseUrl + 'likes',\r\n      params,\r\n      this.http\r\n    );\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NavComponent } from './nav/nav.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { HomeComponent } from './home/home.component';\nimport { RegisterComponent } from './register/register.component';\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\nimport { MemberListComponent } from './members/member-list/member-list.component';\nimport { ListsComponent } from './lists/lists.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { SharedModule } from './_modules/shared.module';\nimport { TestErrorsComponent } from './_errors/test-errors/test-errors.component';\nimport { ErrorInterceptor } from './_interceptors/error.interceptor';\nimport { NotFoundComponent } from './_errors/not-found/not-found.component';\nimport { ServerErrorComponent } from './_errors/server-error/server-error.component';\nimport { MemberCardComponent } from './member-card/member-card.component';\nimport { JwtInterceptor } from './_interceptors/jwt.interceptor';\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\n\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { LoadingInterceptor } from './_interceptors/loading.interceptor';\nimport { PhotoEditorComponent } from './members/photo-editor/photo-editor.component';\nimport { TextInputComponent } from './_forms/text-input/text-input.component';\nimport { DateInputComponent } from './_forms/date-input/date-input.component';\nimport { MemberMessagesComponent } from './members/member-messages/member-messages.component';\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\nimport { HasRoleDirective } from './_directives/has-role.directive';\nimport { UserManagementComponent } from './admin/user-management/user-management.component';\nimport { PhotoManagementComponent } from './admin/photo-management/photo-management.component';\nimport { RolesModalComponent } from './modals/roles-modal/roles-modal.component';\nimport { ConfirmDialogComponent } from './modals/confirm-dialog/confirm-dialog.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    HomeComponent,\n    RegisterComponent,\n    MemberDetailComponent,\n    MemberListComponent,\n    ListsComponent,\n    MessagesComponent,\n    TestErrorsComponent,\n    NotFoundComponent,\n    ServerErrorComponent,\n    MemberCardComponent,\n    MemberEditComponent,\n    PhotoEditorComponent,\n    TextInputComponent,\n    DateInputComponent,\n    MemberMessagesComponent,\n    AdminPanelComponent,\n    HasRoleDirective,\n    UserManagementComponent,\n    PhotoManagementComponent,\n    RolesModalComponent,\n    ConfirmDialogComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    SharedModule,\n    NgxSpinnerModule,\n    ReactiveFormsModule,\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ErrorInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: JwtInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: LoadingInterceptor,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FileUploader } from 'ng2-file-upload';\nimport { take } from 'rxjs/operators';\nimport { Member } from 'src/app/_models/member';\nimport { Photo } from 'src/app/_models/photo';\nimport { User } from 'src/app/_models/user';\nimport { AccountService } from 'src/app/_services/account.service';\nimport { MembersService } from 'src/app/_services/members.service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-photo-editor',\n  templateUrl: './photo-editor.component.html',\n  styleUrls: ['./photo-editor.component.css'],\n})\nexport class PhotoEditorComponent implements OnInit {\n  @Input() member: Member;\n  uploader: FileUploader;\n  hasBaseDropZoneOver: false;\n  baseUrl = environment.apiUrl;\n  user: User;\n\n  constructor(\n    private accountService: AccountService,\n    private memberService: MembersService\n  ) {\n    this.accountService.currentUser$\n      .pipe(take(1))\n      .subscribe((user) => (this.user = user));\n  }\n\n  ngOnInit(): void {\n    this.initializeUploader();\n  }\n  fileOverBase(e: any) {\n    this.hasBaseDropZoneOver = e;\n  }\n\n  setMainPhoto(photo: Photo) {\n    this.memberService.setMainPhoto(photo.id).subscribe(() => {\n      this.user.photoUrl = photo.url;\n      this.accountService.setCurrentUser(this.user);\n      this.member.photoUrl = photo.url;\n      this.member.photos.forEach((p) => {\n        if (p.isMain) p.isMain = false;\n        if (p.id === photo.id) p.isMain = true;\n      });\n    });\n  }\n\n  deletePhoto(photoId: number) {\n    this.memberService.deletePhoto(photoId).subscribe(() => {\n      this.member.photos = this.member.photos.filter((x) => x.id !== photoId);\n    });\n  }\n  initializeUploader() {\n    this.uploader = new FileUploader({\n      url: this.baseUrl + 'users/add-photo',\n      authToken: 'Bearer ' + this.user.token,\n      isHTML5: true,\n      allowedFileType: ['image'],\n      removeAfterUpload: true,\n      autoUpload: false,\n      maxFileSize: 10 * 1024 * 1024,\n    });\n\n    this.uploader.onAfterAddingFile = (file) => {\n      file.withCredentials = false;\n    };\n\n    this.uploader.onSuccessItem = (item, res, stat, headers) => {\n      if (res) {\n        const photo: Photo = JSON.parse(res);\n        this.member.photos.push(photo);\n        if (photo.isMain) {\n          this.user.photoUrl = photo.url;\n          this.member.photoUrl = photo.url;\n          this.accountService.setCurrentUser(this.user);\n        }\n      }\n    };\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-2\" *ngFor=\"let photo of member.photos\">\n    <img\n      src=\"{{ photo.url }}\"\n      alt=\"{{ photo.url }}\"\n      class=\"img-thumbnail p-1\"\n    />\n    <div class=\"text-center img-text\" *ngIf=\"!photo.isApproved\">\n      <span class=\"text-danger\">Awaiting approval</span>\n    </div>\n    <div class=\"text-center\">\n      <button\n        [disabled]=\"photo.isMain || !photo.isApproved\"\n        (click)=\"setMainPhoto(photo)\"\n        [ngClass]=\"photo.isMain ? 'btn-success active' : 'btn-outline-success'\"\n        class=\"btn btn-sm\"\n      >\n        Main\n      </button>\n      <button\n        [disabled]=\"photo.isMain\"\n        (click)=\"deletePhoto(photo.id)\"\n        class=\"btn btn-sm btn-danger\"\n      >\n        <i class=\"fa fa-trash\"></i>\n      </button>\n    </div>\n  </div>\n</div>\n<div class=\"row mt-3\">\n  <div class=\"col-md-3\">\n    <h3>Add Photos</h3>\n\n    <div\n      ng2FileDrop\n      [ngClass]=\"{ 'nv-file-over': hasBaseDropZoneOver }\"\n      (fileOver)=\"fileOverBase($event)\"\n      [uploader]=\"uploader\"\n      class=\"card bg-faded p-3 text-center mb-3 my-drop-zone\"\n    >\n      <i class=\"fa fa-upload fa-3x\"></i>\n      Drop photo here\n    </div>\n\n    Multiple\n    <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" multiple /><br />\n\n    Single\n    <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" />\n  </div>\n\n  <div\n    class=\"col-md-9\"\n    style=\"margin-bottom: 40px\"\n    *ngIf=\"uploader?.queue?.length\"\n  >\n    <h3>Upload queue</h3>\n    <p>Queue length: {{ uploader?.queue?.length }}</p>\n\n    <table class=\"table\">\n      <thead>\n        <tr>\n          <th width=\"50%\">Name</th>\n          <th>Size</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let item of uploader.queue\">\n          <td>\n            <strong>{{ item?.file?.name }}</strong>\n          </td>\n          <td *ngIf=\"uploader.options.isHTML5\" nowrap>\n            {{ item?.file?.size / 1024 / 1024 | number: \".2\" }} MB\n          </td>\n        </tr>\n      </tbody>\n    </table>\n\n    <div>\n      <div>\n        Queue progress:\n        <div class=\"progress\" style=\"\">\n          <div\n            class=\"progress-bar\"\n            role=\"progressbar\"\n            [ngStyle]=\"{ width: uploader.progress + '%' }\"\n          ></div>\n        </div>\n      </div>\n      <button\n        type=\"button\"\n        class=\"btn btn-success btn-s\"\n        (click)=\"uploader.uploadAll()\"\n        [disabled]=\"!uploader.getNotUploadedItems().length\"\n      >\n        <span class=\"fa fa-upload\"></span> Upload all\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-warning btn-s\"\n        (click)=\"uploader.cancelAll()\"\n        [disabled]=\"!uploader.isUploading\"\n      >\n        <span class=\"fa fa-ban\"></span> Cancel all\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-danger btn-s\"\n        (click)=\"uploader.clearQueue()\"\n        [disabled]=\"!uploader.queue.length\"\n      >\n        <span class=\"fa fa-trash\"></span> Remove all\n      </button>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  Resolve,\r\n  RouterStateSnapshot,\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { Member } from '../_models/member';\r\nimport { MembersService } from '../_services/members.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MemberDetailedResolver implements Resolve<Member> {\r\n  constructor(private memberService: MembersService) {}\r\n  resolve(route: ActivatedRouteSnapshot): Observable<Member> {\r\n    return this.memberService.getMember(route.paramMap.get('username'));\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-test-errors',\r\n  templateUrl: './test-errors.component.html',\r\n  styleUrls: ['./test-errors.component.css'],\r\n})\r\nexport class TestErrorsComponent implements OnInit {\r\n  baseUrl = environment.apiUrl;\r\n  validationErrors: string[] = [];\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  ngOnInit(): void {}\r\n  get404Error() {\r\n    this.http.get(this.baseUrl + 'buggy/not-found').subscribe(\r\n      (response) => {\r\n        console.log(response);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n  get400Error() {\r\n    this.http.get(this.baseUrl + 'buggy/bad-request').subscribe(\r\n      (response) => {\r\n        console.log(response);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n  get401Error() {\r\n    this.http.get(this.baseUrl + 'buggy/auth').subscribe(\r\n      (response) => {\r\n        console.log(response);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n  get500Error() {\r\n    this.http.get(this.baseUrl + 'buggy/server-error').subscribe(\r\n      (response) => {\r\n        console.log(response);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n  get400ValidationError() {\r\n    this.http.post(this.baseUrl + 'account/register', {}).subscribe(\r\n      (response) => {\r\n        console.log(response);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n        this.validationErrors = error;\r\n      }\r\n    );\r\n  }\r\n}\r\n","<ng-container>\n  <button class=\"btn btn-outline-primary mr-3\" (click)=\"get500Error()\">\n    Test 500 Error\n  </button>\n  <button class=\"btn btn-outline-primary mr-3\" (click)=\"get400Error()\">\n    Test 400 Error\n  </button>\n  <button class=\"btn btn-outline-primary mr-3\" (click)=\"get401Error()\">\n    Test 401 Error\n  </button>\n  <button class=\"btn btn-outline-primary mr-3\" (click)=\"get404Error()\">\n    Test 404 Error\n  </button>\n  <button\n    class=\"btn btn-outline-primary mr-3\"\n    (click)=\"get400ValidationError()\"\n  >\n    Test 400 Validation Error\n  </button>\n  <div class=\"row mt-5\" *ngIf=\"validationErrors.length > 0\">\n    <ul class=\"text-danger\">\n      <li *ngFor=\"let error of validationErrors\">\n        {{ error }}\n      </li>\n    </ul>\n  </div>\n</ng-container>\n","import { Component, Input, OnInit, Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-text-input',\n  templateUrl: './text-input.component.html',\n  styleUrls: ['./text-input.component.css'],\n})\nexport class TextInputComponent implements ControlValueAccessor {\n  @Input() label: string;\n  @Input() type: 'text';\n\n  constructor(@Self() public ngControl: NgControl) {\n    this.ngControl.valueAccessor = this;\n  }\n  writeValue(obj: any): void {}\n  registerOnChange(fn: any): void {}\n  registerOnTouched(fn: any): void {}\n  setDisabledState?(isDisabled: boolean): void {}\n}\n","<div class=\"form-group\">\n  <input\n    [class.is-invalid]=\"ngControl.touched && ngControl.invalid\"\n    type=\"{{ type }}\"\n    class=\"form-control\"\n    [formControl]=\"ngControl.control\"\n    placeholder=\"{{ label }}\"\n  />\n  <div *ngIf=\"ngControl.control.errors?.required\" class=\"invalid-feedback\">\n    Please enter a {{ label }}\n  </div>\n  <div *ngIf=\"ngControl.control.errors?.minlength\" class=\"invalid-feedback\">\n    {{ label }} must be at least\n    {{ ngControl.control.errors.minlength[\"requiredLength\"] }}\n  </div>\n  <div *ngIf=\"ngControl.control.errors?.maxlength\" class=\"invalid-feedback\">\n    {{ label }} must be at most\n    {{ ngControl.control.errors.maxlength[\"requiredLength\"] }}\n  </div>\n  <div *ngIf=\"ngControl.control.errors?.isMatching\" class=\"invalid-feedback\">\n    Passwords do not match\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\nimport { Member } from '../_models/member';\r\nimport { Pagination } from '../_models/pagination';\r\nimport { MembersService } from '../_services/members.service';\r\n\r\n@Component({\r\n  selector: 'app-lists',\r\n  templateUrl: './lists.component.html',\r\n  styleUrls: ['./lists.component.css'],\r\n})\r\nexport class ListsComponent implements OnInit {\r\n  members: Partial<Member[]>;\r\n  predicate = 'liked';\r\n  pageNumber = 1;\r\n  pageSize = 5;\r\n  pagination: Pagination;\r\n\r\n  constructor(private memberService: MembersService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadLikes();\r\n  }\r\n\r\n  loadLikes() {\r\n    this.memberService\r\n      .getLikes(this.predicate, this.pageNumber, this.pageSize)\r\n      .subscribe((res) => {\r\n        this.members = res.result;\r\n        this.pagination = res.pagination;\r\n      });\r\n  }\r\n\r\n  pageChanged(event: any) {\r\n    this.pageNumber = event.page;\r\n    this.loadLikes();\r\n  }\r\n}\r\n","<div class=\"text-center mt-3\">\r\n  <h2>{{ predicate === \"liked\" ? \"Member I like\" : \"Members who like me\" }}</h2>\r\n</div>\r\n\r\n<div class=\"container mt-3\">\r\n  <div class=\"row\">\r\n    <div class=\"btn-group\" name=\"predicate\">\r\n      <button\r\n        class=\"btn btn-primary\"\r\n        btnRadio=\"liked\"\r\n        [(ngModel)]=\"predicate\"\r\n        (click)=\"loadLikes()\"\r\n      >\r\n        Members I liked\r\n      </button>\r\n      <button\r\n        class=\"btn btn-primary\"\r\n        btnRadio=\"likedBy\"\r\n        [(ngModel)]=\"predicate\"\r\n        (click)=\"loadLikes()\"\r\n      >\r\n        Members who liked me\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <div class=\"row mt-3\">\r\n    <div class=\"col-2\" *ngFor=\"let member of members\">\r\n      <app-member-card [member]=\"member\"></app-member-card>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination\">\r\n  <pagination\r\n    [boundaryLinks]=\"true\"\r\n    [totalItems]=\"pagination.totalItems\"\r\n    [itemsPerPage]=\"pagination.itemsPerPage\"\r\n    [(ngModel)]=\"pagination.currentPage\"\r\n    (pageChanged)=\"pageChanged($event)\"\r\n    previousText=\"&lsaquo;\"\r\n    nextText=\"&rsaquo;\"\r\n    firstText=\"&laquo;\"\r\n    lastText=\"&raquo;\"\r\n  >\r\n  </pagination>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-server-error',\n  templateUrl: './server-error.component.html',\n  styleUrls: ['./server-error.component.css'],\n})\nexport class ServerErrorComponent implements OnInit {\n  error: any;\n\n  constructor(private router: Router) {\n    const navigation = this.router.getCurrentNavigation();\n    this.error = navigation?.extras?.state?.error;\n  }\n\n  ngOnInit(): void {}\n}\n","<h4>\n  Internal server error - refereshing the page will make the error disappear!\n</h4>\n\n<ng-container *ngIf=\"error\">\n  <h5 class=\"text-danger\">Error: {{ error.message }}</h5>\n  <p class=\"font-weight-bold\">\n    Note: If you are seeing this then Angular is probably not to blame\n  </p>\n  <p>What to do next?</p>\n  <ol>\n    <li>Open the Chrome Dev Tools</li>\n    <li>Inspect the network tab</li>\n    <li>Check the failing request</li>\n    <li>Examine the request URL - make sure it is correct</li>\n    <li>\n      Reproduce the error in Postman - if we see the same response, then the\n      issue is not with Angular\n    </li>\n  </ol>\n  <p>\n    Following is the stack trace - this is where your navigation should start!\n  </p>\n  <code class=\"mt-5\" style=\"background-color: whitesmoke\">{{\n    error.details\n  }}</code>\n</ng-container>\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\nimport { AccountService } from '../_services/account.service';\r\nimport { MembersService } from '../_services/members.service';\r\n\r\n@Component({\r\n  selector: 'app-nav',\r\n  templateUrl: './nav.component.html',\r\n  styleUrls: ['./nav.component.css'],\r\n})\r\nexport class NavComponent implements OnInit {\r\n  model: any = {};\r\n\r\n  constructor(\r\n    public accountService: AccountService,\r\n    private router: Router,\r\n    private toastr: ToastrService,\r\n    private memberService: MembersService\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  login() {\r\n    this.accountService.login(this.model).subscribe((response) => {\r\n      this.router.navigateByUrl('/members');\r\n    });\r\n  }\r\n  logout() {\r\n    this.accountService.logout();\r\n    this.memberService.memberCache.clear();\r\n    this.router.navigateByUrl('/');\r\n  }\r\n}\r\n","<nav class=\"navbar navbar-expand-md navbar-dark fixed-top bg-primary\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" routerLink=\"/\">Social App</a>\n    <ul class=\"navbar-nav mr-auto\">\n      <ng-container *ngIf=\"accountService.currentUser$ | async\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/members\" routerLinkActive=\"active\"\n            >Matches\n          </a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/lists\">List</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/messages\">Messages</a>\n        </li>\n        <li *appHasRole=\"['Admin', 'Moderator']\" class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/admin\">Admin</a>\n        </li>\n      </ng-container>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/errors\" routerLinkActive=\"active\"\n          >Errors</a\n        >\n      </li>\n    </ul>\n    <div\n      class=\"dropdown\"\n      *ngIf=\"accountService.currentUser$ | async as user\"\n      dropdown\n    >\n      <img\n        src=\"{{ user.photoUrl || './assets/user.png' }}\"\n        alt=\"{{ user.username }}\"\n      />\n\n      <a class=\"dropdown-toggle text-light ml-2\" dropdownToggle\n        >Welcome {{ user.knownAs || user.username | titlecase }}</a\n      >\n      <div class=\"dropdown-menu mt-3\" *dropdownMenu>\n        <a class=\"dropdown-item\" routerLink=\"/member/edit\">Edit Profile</a>\n        <div class=\"dropdown-divider\"></div>\n        <a class=\"dropdown-item\" (click)=\"logout()\">Logout</a>\n      </div>\n    </div>\n    <form\n      *ngIf=\"(accountService.currentUser$ | async) === null\"\n      #loginForm=\"ngForm\"\n      class=\"form-inline mt-2 mt-md-0\"\n      (ngSubmit)=\"login()\"\n      autocomplete=\"off\"\n    >\n      <input\n        name=\"username\"\n        [(ngModel)]=\"model.username\"\n        class=\"form-control mr-sm-2\"\n        type=\"text\"\n        placeholder=\"Username\"\n      />\n      <input\n        type=\"password\"\n        name=\"password\"\n        [(ngModel)]=\"model.password\"\n        class=\"form-control mr-sm-2\"\n        placeholder=\"Password\"\n      />\n      <button class=\"btn btn-success my-2 my-sm-0\" type=\"submit\">Login</button>\n    </form>\n  </div>\n</nav>\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { User } from '../_models/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PresenceService {\r\n  hubUrl = environment.hubUrl;\r\n  private hubConnection: HubConnection;\r\n  private onlineUsersSource = new BehaviorSubject<string[]>([]);\r\n  onlineUsers$ = this.onlineUsersSource.asObservable();\r\n\r\n  constructor(private toastr: ToastrService, private router: Router) {}\r\n\r\n  createHubConnection(user: User) {\r\n    this.hubConnection = new HubConnectionBuilder()\r\n      .withUrl(this.hubUrl + 'presence', {\r\n        accessTokenFactory: () => user.token,\r\n      })\r\n      .withAutomaticReconnect()\r\n      .build();\r\n\r\n    this.hubConnection.start().catch((error) => console.log(error));\r\n\r\n    this.hubConnection.on('UserIsOnline', (username) => {\r\n      this.onlineUsers$.pipe(take(1)).subscribe((usernames) => {\r\n        this.onlineUsersSource.next([...usernames, username]);\r\n      });\r\n    });\r\n\r\n    this.hubConnection.on('UserIsOffline', (username) => {\r\n      this.onlineUsers$.pipe(take(1)).subscribe((usernames) => {\r\n        this.onlineUsersSource.next([\r\n          ...usernames.filter((x) => x != username),\r\n        ]);\r\n      });\r\n    });\r\n\r\n    this.hubConnection.on('GetOnlineUsers', (usernames: string[]) => {\r\n      this.onlineUsersSource.next(usernames);\r\n    });\r\n\r\n    this.hubConnection.on('NewMessageReceived', ({ username, knownAs }) => {\r\n      this.toastr\r\n        .info(knownAs + ' has sent you a new message!')\r\n        // route user to a new url if click on toastr\r\n        .onTap.pipe(take(1))\r\n        .subscribe(() => {\r\n          this.router.navigateByUrl('/members/' + username + '?tab=3');\r\n        });\r\n    });\r\n  }\r\n\r\n  stopHubConnection() {\r\n    this.hubConnection.stop().catch((error) => console.log(error));\r\n  }\r\n}\r\n","import { User } from './user';\r\n\r\nexport class UserParams {\r\n  gender: string;\r\n  minAge = 18;\r\n  maxAge = 99;\r\n  pageNumber = 1;\r\n  pageSize = 5;\r\n  orderBy = 'lastActive';\r\n\r\n  constructor(user: User) {\r\n    this.gender = user.gender === 'female' ? 'male' : 'female';\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-panel',\n  templateUrl: './admin-panel.component.html',\n  styleUrls: ['./admin-panel.component.css']\n})\nexport class AdminPanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2>Admin Panel</h2>\n<div class=\"tab-panel\">\n  <tabset class=\"member-tabset\">\n    <tab heading=\"User management\" *appHasRole=\"['Admin']\">\n      <div class=\"container\">\n        <app-user-management></app-user-management>\n      </div>\n    </tab>\n\n    <tab heading=\"Photo management\" *appHasRole=\"['Admin', 'Moderator']\">\n      <div class=\"container\">\n        <app-photo-management></app-photo-management>\n      </div>\n    </tab>\n  </tabset>\n</div>\n","import { Component, HostListener, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { take } from 'rxjs/operators';\nimport { Member } from 'src/app/_models/member';\nimport { User } from 'src/app/_models/user';\nimport { AccountService } from 'src/app/_services/account.service';\nimport { MembersService } from 'src/app/_services/members.service';\n\n@Component({\n  selector: 'app-member-edit',\n  templateUrl: './member-edit.component.html',\n  styleUrls: ['./member-edit.component.css'],\n})\nexport class MemberEditComponent implements OnInit {\n  @ViewChild('editForm') editForm: NgForm; //access to the HTML form inside component\n  member: Member;\n  user: User;\n\n  // Using HostListener to extend the case when closing the tab after editing. prevent-unsaved-changes guard only works when navigating to routes within the app, not the case closing the browser or the tab.\n  @HostListener('window:beforeunload', ['$event']) unloadNotification(\n    $event: any\n  ) {\n    if (this.editForm.dirty) {\n      $event.returnValue = true;\n    }\n  }\n  constructor(\n    private accountService: AccountService,\n    private memberService: MembersService,\n    private toastr: ToastrService\n  ) {\n    this.accountService.currentUser$\n      .pipe(take(1))\n      .subscribe((user) => (this.user = user));\n  }\n\n  ngOnInit(): void {\n    this.loadMember();\n  }\n\n  loadMember() {\n    this.memberService.getMember(this.user.username).subscribe((member) => {\n      this.member = member;\n    });\n  }\n\n  updateMember() {\n    this.memberService.updateMember(this.member).subscribe(() => {\n      this.toastr.success('Profile updated successfully');\n      this.editForm.reset(this.member); //pass the member to keep the data\n    });\n  }\n}\n","<div class=\"row\" *ngIf=\"member\">\n  <div class=\"col-4\">\n    <h1>Your Profile</h1>\n  </div>\n  <div class=\"col-8\">\n    <div class=\"alert alert-info\" *ngIf=\"editForm.dirty\">\n      <strong>Information: </strong>You have made changes. Any unsaved changes\n      will be lost\n    </div>\n  </div>\n  <div class=\"col-4\">\n    <div class=\"card\">\n      <img\n        src=\"{{ member.photoUrl || './assets/user.png' }}\"\n        alt=\"{{ member.knownAs }}\"\n        class=\"card-img-top img-thumbnail\"\n      />\n      <div class=\"card-body\">\n        <div>\n          <strong>Location:</strong>\n          <p>{{ member.city }}, {{ member.city }}</p>\n        </div>\n        <div>\n          <strong>Age:</strong>\n          <p>{{ member.age }}</p>\n        </div>\n        <div>\n          <strong>Last Active:</strong>\n          <p>{{ member.lastActive | timeago }}</p>\n        </div>\n        <div>\n          <strong>Member Since:</strong>\n          <p>{{ member.created | date: \"dd MMM yyyy\" }}</p>\n        </div>\n      </div>\n      <div class=\"card-footer\">\n        <button\n          [disabled]=\"!editForm.dirty\"\n          type=\"submit\"\n          form=\"editForm\"\n          class=\"btn btn-success btn-block\"\n        >\n          Save Changes\n        </button>\n      </div>\n    </div>\n  </div>\n  <div class=\"col-8\">\n    <tabset class=\"member-tabset\">\n      <tab heading=\"About {{ member.knownAs }}\">\n        <form #editForm=\"ngForm\" id=\"editForm\" (ngSubmit)=\"updateMember()\">\n          <h4>Description</h4>\n          <textarea\n            class=\"form-control\"\n            [(ngModel)]=\"member.introduction\"\n            name=\"introduction\"\n            rows=\"6\"\n          ></textarea>\n          <h4 class=\"mt-2\">Looking for</h4>\n          <textarea\n            class=\"form-control\"\n            [(ngModel)]=\"member.lookingFor\"\n            name=\"lookingFor\"\n            rows=\"6\"\n          ></textarea>\n          <h4 class=\"mt-2\">Interests</h4>\n          <textarea\n            class=\"form-control\"\n            [(ngModel)]=\"member.interests\"\n            name=\"interests\"\n            rows=\"6\"\n          ></textarea>\n          <h4 class=\"mt-2\">Location Details:</h4>\n          <div class=\"form-inline\">\n            <label for=\"city\">City: </label>\n            <input\n              [(ngModel)]=\"member.city\"\n              type=\"text\"\n              name=\"city\"\n              class=\"form-control mx-2\"\n            />\n            <label for=\"city\">Country: </label>\n            <input\n              [(ngModel)]=\"member.city\"\n              type=\"text\"\n              name=\"country\"\n              class=\"form-control mx-2\"\n            />\n          </div>\n        </form>\n      </tab>\n      <tab heading=\"Edit Photos\">\n        <app-photo-editor [member]=\"member\"></app-photo-editor>\n      </tab>\n    </tabset>\n  </div>\n</div>\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { PaginatedResult } from '../_models/pagination';\r\n\r\nexport function getPaginatedResult<T>(url, params, http: HttpClient) {\r\n  const paginatedResult: PaginatedResult<T> = new PaginatedResult<T>();\r\n  return http\r\n    .get<T>(url, { observe: 'response', params })\r\n    .pipe(\r\n      map((response) => {\r\n        paginatedResult.result = response.body;\r\n        if (response.headers.get('Pagination') !== null) {\r\n          paginatedResult.pagination = JSON.parse(\r\n            response.headers.get('Pagination')\r\n          );\r\n        }\r\n        return paginatedResult;\r\n      })\r\n    );\r\n}\r\n\r\nexport function getPaginationHeaders(pageNumber: number, pageSize: number) {\r\n  let params = new HttpParams();\r\n  params = params.append('pageNumber', pageNumber.toString());\r\n  params = params.append('pageSize', pageSize.toString());\r\n  return params;\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { MemberEditComponent } from '../members/member-edit/member-edit.component';\nimport { ConfirmService } from '../_services/confirm.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PreventUnsavedChangesGuard implements CanDeactivate<unknown> {\n  constructor(private confirmService: ConfirmService) {}\n  canDeactivate(component: MemberEditComponent): Observable<boolean> | boolean {\n    if (component.editForm.dirty) {\n      return this.confirmService.confirm();\n    }\n    return true;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.css'],\n})\nexport class ConfirmDialogComponent implements OnInit {\n  title: string;\n  message: string;\n  btnOkText: string;\n  btnCancelText: string;\n  result: boolean;\n\n  constructor(public bsModalRef: BsModalRef) {}\n\n  ngOnInit(): void {}\n\n  confirm() {\n    this.result = true;\n    this.bsModalRef.hide();\n  }\n\n  decline() {\n    this.result = false;\n    this.bsModalRef.hide();\n  }\n}\n","<div class=\"modal-header\">\n  <h4 class=\"modal-title pull-left\">{{ title }}</h4>\n</div>\n<div class=\"modal-body\">\n  <p>{{ message }}</p>\n</div>\n<div class=\"modal-footer\">\n  <button type=\"button\" class=\"btn btn-success\" (click)=\"confirm()\">\n    {{ btnOkText }}\n  </button>\n  <button type=\"button\" class=\"btn btn-danger\" (click)=\"decline()\">\n    {{ btnCancelText }}\n  </button>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\nimport { HomeComponent } from './home/home.component';\nimport { ListsComponent } from './lists/lists.component';\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\nimport { MemberListComponent } from './members/member-list/member-list.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { NotFoundComponent } from './_errors/not-found/not-found.component';\nimport { ServerErrorComponent } from './_errors/server-error/server-error.component';\nimport { TestErrorsComponent } from './_errors/test-errors/test-errors.component';\nimport { AdminGuard } from './_guards/admin.guard';\nimport { AuthGuard } from './_guards/auth.guard';\nimport { PreventUnsavedChangesGuard } from './_guards/prevent-unsaved-changes.guard';\nimport { MemberDetailedResolver } from './_resolvers/member-detailed.resolver';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  {\n    path: '',\n    runGuardsAndResolvers: 'always',\n    canActivate: [AuthGuard],\n    children: [\n      {\n        path: 'members',\n        component: MemberListComponent,\n        canActivate: [AuthGuard],\n      },\n      {\n        path: 'members/:username',\n        component: MemberDetailComponent,\n        resolve: { member: MemberDetailedResolver },\n      },\n      {\n        path: 'member/edit',\n        component: MemberEditComponent,\n        canDeactivate: [PreventUnsavedChangesGuard],\n      },\n      { path: 'lists', component: ListsComponent },\n      { path: 'messages', component: MessagesComponent },\n      {\n        path: 'admin',\n        component: AdminPanelComponent,\n        canActivate: [AdminGuard],\n      },\n    ],\n  },\n\n  { path: 'errors', component: TestErrorsComponent },\n  { path: 'not-found', component: NotFoundComponent },\n  { path: 'server-error', component: ServerErrorComponent },\n  { path: '**', component: HomeComponent, pathMatch: 'full' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Injectable } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { Observable } from 'rxjs';\nimport { ConfirmDialogComponent } from '../modals/confirm-dialog/confirm-dialog.component';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConfirmService {\n  bsModalRef: BsModalRef;\n\n  constructor(private modalService: BsModalService) {}\n\n  confirm(\n    title = 'Confirmation',\n    message = 'Are you sure you want to do this?',\n    btnOkText = 'Ok',\n    btnCancelText = 'Cancel'\n  ): Observable<boolean> {\n    const config = {\n      initialState: {\n        title,\n        message,\n        btnOkText,\n        btnCancelText,\n      },\n    };\n    this.bsModalRef = this.modalService.show(ConfirmDialogComponent, config);\n\n    return new Observable<boolean>(this.getResult());\n  }\n\n  private getResult() {\n    return (observer) => {\n      const subscription = this.bsModalRef.onHidden.subscribe(() => {\n        observer.next(this.bsModalRef.content.result);\n        observer.complete();\n      });\n\n      return {\n        unsubscribe() {\n          subscription.unsubscribe();\n        },\n      };\n    };\n  }\n}\n","import { Component, EventEmitter, Input, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { User } from 'src/app/_models/user';\n\n@Component({\n  selector: 'app-roles-modal',\n  templateUrl: './roles-modal.component.html',\n  styleUrls: ['./roles-modal.component.css'],\n})\nexport class RolesModalComponent implements OnInit {\n  @Input() updateSelectedRoles = new EventEmitter();\n  user: User;\n  roles: any[];\n\n  constructor(public bsModalRef: BsModalRef) {}\n\n  ngOnInit(): void {}\n\n  updateRoles() {\n    this.updateSelectedRoles.emit(this.roles);\n    this.bsModalRef.hide();\n  }\n}\n","<div class=\"modal-header\">\n  <h4 class=\"modal-title pull-left\">Edit roles for {{ user.username }}</h4>\n  <button\n    type=\"button\"\n    class=\"close pull-right\"\n    aria-label=\"Close\"\n    (click)=\"bsModalRef.hide()\"\n  >\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n</div>\n<div class=\"modal-body\">\n  <form #rolesForm=\"ngForm\" id=\"rolesForm\">\n    <div class=\"form-check\" *ngFor=\"let role of roles\">\n      <input\n        type=\"checkbox\"\n        class=\"form-check-input\"\n        [checked]=\"role.checked\"\n        value=\"role.name\"\n        (change)=\"role.checked = !role.checked\"\n        [disabled]=\"role.name === 'Admin' && user.username === 'admin'\"\n      />\n      <label>{{ role.name }}</label>\n    </div>\n  </form>\n</div>\n<div class=\"modal-footer\">\n  <button type=\"button\" class=\"btn btn-default\" (click)=\"bsModalRef.hide()\">\n    Cancel\n  </button>\n  <button type=\"button\" class=\"btn btn-success\" (click)=\"updateRoles()\">\n    Submit\n  </button>\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}